@model Minie.Carters.Models.ItemsIndex<Minie.Carters.Data.Product>
@{
    var category = Minie.Carters.Models.AppData.Categories.FirstOrDefault(c => c.SubCategories.Any(sc => sc.CategoryID == Model.Category));
    if (category == null)
    {
        category = Minie.Carters.Models.AppData.Categories.FirstOrDefault(c => c.CategoryID == Model.Category);
    }
    ViewBag.Title = category.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-2 left-column">
        <div data-spy="affix" data-offset-top="0">
            <div class="category text-center">
                <h3>@category.Name</h3>
                <img src="@category.ImageUrl" class="img-responsive" />
            </div>
            <div>
                <strong>Sizes</strong>
                @foreach (var size in category.Sizes)
                {
                    <div class="checkbox">
                        <label>
                            <input data-filter="size" type="checkbox" @(Model.Sizes.Contains(size) ? "checked" : string.Empty) value="@size" onchange="applyFilter()">
                            @size
                        </label>
                    </div>   
                }
            </div>
        </div>
    </div>
    <div class="col-md-10">
        <div class="row">
            <div class="col-xs-12">
                <h3>@category.SubCategories.First(c => c.CategoryID == Model.Category).Name
                    <div class="btn-group pull-right">
                        <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                            <i class="glyphicon glyphicon-sort-by-attributes-alt"></i>&nbsp;@Minie.Carters.Models.AppData.Orders[Model.Order]&nbsp;<span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu" role="menu">
                            @foreach (var order in Minie.Carters.Models.AppData.Orders)
                            {
                                <li><a href="#" onclick="applyOrder(@order.Key)">@order.Value</a></li>
                            }
                        </ul>
                    </div>
                </h3>
            </div>
            <hr class="col-xs-12" />
            @if (Model.Items.Count() > 0)
            {
                foreach (var product in Model.Items)
                {
                <div class="col-md-3 col-sm-4 text-center product">
                    <img src="@product.Image" class="img-thumbnail" />
                    <div class="title" title="@product.Name">@product.Name</div>
                    <div class="price">@string.Format("{0:c}", product.Price * 5)</div>
                    <div class="actions">
                        @if (product.Sizes != null && product.Sizes.Count > 0)
                        {
                            <div class="btn-group">
                                <button class="btn btn-default dropdown-toggle" data-toggle="dropdown"><i class="glyphicon glyphicon-shopping-cart"></i>&nbsp;Add to cart&nbsp;<span class="caret"></span></button>
                                <ul class="dropdown-menu" role="menu">
                                    @foreach (var size in product.Sizes)
                                    {
                                        <li><a href="#" onclick="addToCart('@product.SKU', '@size')">@size</a></li>   
                                    }
                                </ul>
                            </div>
                        }
                        else
                        {
                            <button class="btn btn-default disabled">Out of stock</button>
                        }
                    </div>
                </div>
                }
            }
            else
            {
                <div class="col-xs-12">
                    <p>There are no item available in this category.</p>
                </div>
            }
            <hr class="col-xs-12" />
            <div class="col-xs-12 text-center">
                <ul class="pagination">
                    @for (int i = 1; i <= Model.Pages; i++)
                    {
                        <li class="@(i == Model.Page ? "active" : string.Empty)"><a href="/@Model.Category/@i@(Model.Sizes.Length > 0 ? "?sizes=" + String.Join("-", Model.Sizes) : string.Empty)">@i</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
        function getSizesFilter() {
            var sizes = "";
            $("input[data-filter=size]").each(function (idx, item) { if ($(item).is(":checked")) { sizes += "-" + $(item).val(); } });
            return sizes;
        }
        function applyFilter() {
            var sizes = getSizesFilter();
            if (sizes != "") {
                document.location.href = "/@Model.Category?sizes=" + sizes.substring(1, sizes.length) + "&order=@Model.Order";
            } else {
                document.location.href = "/@Model.Category?order=@Model.Order";
            }
        }

        function applyOrder(order) {
            var sizes = getSizesFilter();
            if (sizes != "") {
                document.location.href = "/@Model.Category?sizes=" + sizes.substring(1, sizes.length) + "&order=" + order;
            } else {
                document.location.href = "/@Model.Category?order=" + order;
            }
        }

        function addToCart(sku, size) {
            $.post("/Orders/AddItem", { SKU: sku, Size: size }, function (response) {
                if (response.error) {
                    alert(response.error);
                } else {
                    updateCart(response.cart);
                }
            });
        }

        loadCart();
    </script>
}